{
  "hash": "f1184bb5fd6e197af67b9e36948e35b9",
  "result": {
    "markdown": "---\ntitle: \"Squid Game: The probability of Glass Bridge\"\ncategories: [python, probability, 2021]\ndate: 2021-11-04\ntoc: True\nauthor:\n  - Aster Hu\n  - Rick Xie\ndescription: Which player has the highest chance to become the first one to cross the bridge?\n---\n\n::: {.callout-warning}\n## SPOILER ALERT\nThis post contains spoilers up to Episode 7.\n:::\n\nI read an interesting article recently about Squid Game, in which the author uses Monte Carlo simulation to calculate the possible outcomes of Glass Bridge[^1]. So I thought it would be interesting to compare the mathematical probability vs. the simulation result.\n\n**TL;DR**: jump to [mathematical probability table](#python-implementation) and [computer simulation chart](#compare-with-simulation).\n\n## Assumption\n\nKnowing that the probability is theory-based, there are few assumptions for the calculation.\n\n1. Unlike the show, we ignore the time limit factor\n2. The player remembers the choice of their previous player and can get to the right glass based on that\n3. Everyone acts in the best interest of the team; the player won't block the bridge\n4. The number of steps is greater than or equal to the number of players\n\n## A simple example\n\n#### The settings\n\nSuppose there are only 3 steps and 3 players. In each step, a player guess which glass (of multiple glasses to choose) is the correct one. In the show, the probability of any player guessing a correct glass in each step is $\\frac{1}{2}$. To better illustrate different probability later, I generalize the probability using $p$ here.\n\nEach player <u>starts their game</u> facing different steps. \"*The player starts their game facing $x$ steps*\" means the previous player just dies, and the player has $x$ steps to choose. For example, in our simple game with 3 steps and 3 players, player 1 _starts the game_ by facing 3 steps. Player 2 could start the game by facing 2, 1, or 0 steps, depending on where player 1 makes a wrong choice and dies.\n\n#### Player 1\n\nPlayer 1 starts the game by facing 3 steps (denoted as $F_1^3$), so the probability that Player 1 survives (denoted as $S_1$) is simply:\n\n$$P(S_1) = P(S_1|F_1^3) = p^3$$\n\n#### Player 2\n\nFor player 2, there are multiple mutually exclusive events, depending on the result of Player 1:\n\n1. (*The worst scenario*) If Player 1 makes 0 correct guesses (they die at the 1st step unfortunately), Player 2 knows the correct choice of the 1st step and starts the game by facing the remaining 2 steps (denoted as $F_2^2$);\n1. If Player 1 makes 1 correct guess followed by 1 incorrect guess, Player 2 knows the correct choice of the 1st and 2nd step and faces 1 step (denoted as $F_2^1$);\n1. If Player 1 makes 2 correct guesses, Player 2 knows the correct choice of the 1st to 3rd step and faces 0 steps (denoted as $F_2^0$);\n1. If Player 1 survives (makes all 3 correct guesses), Player 2 also survives the game. The probability of player 2 survives **and** player 1 survives, is equal to the probability that Player 1 survives, or $P(S_1)$.\n\n**By law of total probability, the sum of the probability of these events are the probability that Player 2 survives**:\n\n$$P(S_2)=\\underbrace{P(S_2|F_2^2)P(F_2^2)+P(S_2|F_2^1)P(F_2^1)+P(S_2|F_2^0)P(F_2^0)}_\\text{Probability of Player 2 being the first survivor}+P(S_1)$$\n\nThe sum of the first three components happen to be the probability of player 2 being the first survivor in the game.\n\nThe probability that Player 2 survives conditional on when Player 2 starts the game by facing $k$ steps(i.e. $P(S_2\\|F_2^k)$) is easily calculated and similar to Player 1. That is, $P(S_2\\|F_2^k) = p^k$. The probability of Player 2 facing $k$ steps (i.e. $P(F_2^k)$) can be derived from Player 1. For instance, Player 2 can only start the game by facing 0 steps when Player 1 dies exactly at the 3rd step. Therefore, $P(F_2^0) = p^2(1-p)$.\n\n#### Player 3\n\nSimilarly, the event that Player 3 survives can be decomposed too. The trick here is to decompose Player 3's survival such that it only depends on Player 2:\n\n1. (*The worst scenario*) Player 3 will face 1 step ($F_3^1$), if Player 2 faces 2 steps and makes 0 correct guesses;\n1. Player 3 will face 0 steps ($F_3^0$) when:\n   1. Player 2 faces 2 steps and makes 1 correct guess only (that is, the first guess is correct and second is incorrect);\n   1. Player 2 faces 1 step and 0 correct guesses;\n1. If Player 2 survives (no matter how many steps Player 2 faces), Player 3 also survives. This is equal to the probability that Player 2 survives, $P(S_2)$.\n\n**The sum of above probability is the chances that Player 3 survives:**\n\n$$P(S_3)=\\underbrace{P(S_3|F_3^1)P(F_3^1)+P(S_3|F_3^0)P(F_3^0)}_\\text{Probability of Player 3 being the first survivor}+P(S_2)$$\n\nwhere the 1st scenario when Player 3 facing 1 step ($F_3^1$) happens only when Player 2 faces 2 steps ($F_2^2$), **and** makes the wrong choice (with probability $1-p$). Therefore the probability is:\n\n$$P(F_3^1) =  P(F_2^2) \\times (1-p)$$\n\nSimilarly, the probability for the 2nd scenario can be broken down accordingly.\n\n$$P(F_3^0) =  P(F_2^2) \\times p(1-p) + P(F_2^1) \\times (1-p)$$\n\n## Generalization\n\nBy extending the example above, we can generalize the game to $n$ steps and $m$ players where $m \\leq n$. The survival probability of player $k$ ($1 < k \\leq m$) is:\n\n$$P(S_k) = \\sum_{i = 0}^{n-(k-1)}P(S_k|F_k^i)P(F_k^i) + P(S_{k-1})$$\n\nand\n\n$$ P(F_k^i) = \\sum_{j=i+1}^{n-(k-2)}P(F_{k-1}^{j})\\times p^{(j-i-1)}(1-p) $$\n\n## Python implementation\n\nTo get the survival probability of each player, I use Python to calculate the result based on above generation. In the show, it has 16 players and 18 glasses, so I substitute the same value into players $m$ and steps $n$.\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nimport pandas as pd\nimport numpy as np\n\nm = 16   # m player\nn = 18   # n steps\np = 0.5 # probability of correct guess for each step; default is 50%\n\n# Initiation\nP1 = np.zeros((m, n+1))\nP2 = np.zeros((m, n+1))\n\n# P1[s,t] is the probability that player s+1 faces n-t steps\n# P2[s,t] is the probability that player s+1 survives if they face n-t steps\n# Note that python starts index from 0\nP1[0,0] = 1\nfor i in range(1, m):\n    for j in range(1, n+1):\n        for k in range(0, j):\n            P1[i, j] += P1[i-1, k]* p**(j-k-1)*(1-p)\n\nfor i in range(0, n+1):\n    P2[:,i] = p**(n-i)\n\nP2 = np.triu(P2)\n\n# P3[t] is the probability of player t+1 being the first survivor\nP3 = (P1*P2).sum(axis=1)\n\n# P_sur[t] is player t+1's cumulative survival probability in the game\nP_survival = P3.cumsum()\n\nprint(P_survival)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[3.81469727e-06 7.24792480e-05 6.56127930e-04 3.76892090e-03\n 1.54418945e-02 4.81262207e-02 1.18942261e-01 2.40341187e-01\n 4.07264709e-01 5.92735291e-01 7.59658813e-01 8.81057739e-01\n 9.51873779e-01 9.84558105e-01 9.96231079e-01 9.99343872e-01]\n```\n:::\n:::\n\n\nThe `P3` is the probability of the player being the first survivor in the game, while the printed `P_survival` is the cumulative survival probability for player 1 to player 16.\n\nWhen it's put into a table, the survival probability `P3` and `P_survival` look like this:\n\n::: {#tbl-survivers .cell tbl-cap='Mathematical survival probability of Glass Bridge' execution_count=2}\n``` {.python .cell-code code-fold=\"true\"}\nplayer = ['Player ' + str(x) for x in range(1, 17)]\ndf = pd.DataFrame({'Player': player, 'Probability of being the first survivor': P3, 'Survival probability': P_survival})\ndf\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Player</th>\n      <th>Probability of being the first survivor</th>\n      <th>Survival probability</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Player 1</td>\n      <td>0.000004</td>\n      <td>0.000004</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Player 2</td>\n      <td>0.000069</td>\n      <td>0.000072</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Player 3</td>\n      <td>0.000584</td>\n      <td>0.000656</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Player 4</td>\n      <td>0.003113</td>\n      <td>0.003769</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Player 5</td>\n      <td>0.011673</td>\n      <td>0.015442</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Player 6</td>\n      <td>0.032684</td>\n      <td>0.048126</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Player 7</td>\n      <td>0.070816</td>\n      <td>0.118942</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Player 8</td>\n      <td>0.121399</td>\n      <td>0.240341</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Player 9</td>\n      <td>0.166924</td>\n      <td>0.407265</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Player 10</td>\n      <td>0.185471</td>\n      <td>0.592735</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>Player 11</td>\n      <td>0.166924</td>\n      <td>0.759659</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>Player 12</td>\n      <td>0.121399</td>\n      <td>0.881058</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>Player 13</td>\n      <td>0.070816</td>\n      <td>0.951874</td>\n    </tr>\n    <tr>\n      <th>13</th>\n      <td>Player 14</td>\n      <td>0.032684</td>\n      <td>0.984558</td>\n    </tr>\n    <tr>\n      <th>14</th>\n      <td>Player 15</td>\n      <td>0.011673</td>\n      <td>0.996231</td>\n    </tr>\n    <tr>\n      <th>15</th>\n      <td>Player 16</td>\n      <td>0.003113</td>\n      <td>0.999344</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\nAs we can see, starting from player 13, they can pretty much chill out because they have over 95% chance to survive. In the mean time, player 10 has the highest chance to become the first one to cross the bridge.\n\nObviously, it is an optimistic estimate due to our [assumption](#assumption).\n\n## Compare with simulation\n\nWhen we compare the mathematical probability with computer simulation, the result is quite similar. The chart below is the survival probability after running 1 million Monte Carlo simulations in R.\n\n![Computer simulation: survival probability of Glass Bridge](survivor_sim.png)\n\nSo yes, it's a game based on pure luck and math. What lesson did we learn from it? Well, I guess it would be: *being in the middle is not always the safest choice*.\n\nOf course, as a risk-averse person, I hope no one has to face the same choice.\n\n> Special thanks to my partner and SO, Rick, for his tremendous contributions to the mathematical calculation in this post\n\n\n[^1]: Helveston (2021, Oct. 19). Simulating the Squid Game bridge scene in R. Retrieved from [jhelvy.com](https://www.jhelvy.com/posts/2021-10-19-monte-carlo-bridge-game/)\n\n",
    "supporting": [
      "index_files/figure-html"
    ],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}